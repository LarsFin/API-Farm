// Code generated by MockGen. DO NOT EDIT.
// Source: src\response.go

// Package mock_apifarm is a generated GoMock package.
package mock_apifarm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponse is a mock of Response interface.
type MockResponse struct {
	ctrl     *gomock.Controller
	recorder *MockResponseMockRecorder
}

// MockResponseMockRecorder is the mock recorder for MockResponse.
type MockResponseMockRecorder struct {
	mock *MockResponse
}

// NewMockResponse creates a new mock instance.
func NewMockResponse(ctrl *gomock.Controller) *MockResponse {
	mock := &MockResponse{ctrl: ctrl}
	mock.recorder = &MockResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponse) EXPECT() *MockResponseMockRecorder {
	return m.recorder
}

// OkText mocks base method.
func (m *MockResponse) OkText(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OkText", arg0)
}

// OkText indicates an expected call of OkText.
func (mr *MockResponseMockRecorder) OkText(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OkText", reflect.TypeOf((*MockResponse)(nil).OkText), arg0)
}

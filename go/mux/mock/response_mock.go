// Code generated by MockGen. DO NOT EDIT.
// Source: src\response.go

// Package mock_apifarm is a generated GoMock package.
package mock_apifarm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockresponse is a mock of response interface.
type Mockresponse struct {
	ctrl     *gomock.Controller
	recorder *MockresponseMockRecorder
}

// MockresponseMockRecorder is the mock recorder for Mockresponse.
type MockresponseMockRecorder struct {
	mock *Mockresponse
}

// NewMockresponse creates a new mock instance.
func NewMockresponse(ctrl *gomock.Controller) *Mockresponse {
	mock := &Mockresponse{ctrl: ctrl}
	mock.recorder = &MockresponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockresponse) EXPECT() *MockresponseMockRecorder {
	return m.recorder
}

// OkText mocks base method.
func (m *Mockresponse) OkText(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OkText", arg0)
}

// OkText indicates an expected call of OkText.
func (mr *MockresponseMockRecorder) OkText(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OkText", reflect.TypeOf((*Mockresponse)(nil).OkText), arg0)
}

namespace ApiFarm.Utils.Impl
{
    /// <summary>
    /// Captures data from a request's life through service and storage communication.
    /// </summary>
    /// <typeparam name="T">The type of the target entity.</typeparam>
    public class Query<T> : IQuery<T>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Query{T}"/> class.
        /// </summary>
        /// <param name="code">The status of the query made (e.g; 404: not found).</param>
        /// <param name="message">The message with the query. Used for failures or instances where a message is more descriptive than a result itself.</param>
        /// <param name="result">The return from the storage query.</param>
        public Query(uint code, string message, T result)
        {
            this.Code = code;
            this.Message = message;
            this.Result = result;
        }

        /// <summary>
        /// Gets the status code of the query (e.g; 200: successful or 404: not found).
        /// </summary>
        public uint Code { get; }

        /// <summary>
        /// Gets a detailed message generated by the query made.
        /// </summary>
        public string Message { get; }

        /// <summary>
        /// Gets the return from the storage query.
        /// </summary>
        public T Result { get; }
    }
}
